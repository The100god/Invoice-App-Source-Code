{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,4EAA4E;AAC5E,gFAAgF;AAChF,mEAAsD;AAEtD,kFAAkF;AAGlF,8CAA8C;AAC9C,wBAAa,CAAC,iBAAiB,CAAC,UAAU,EAAE;IAC1C,+BAA+B;IAC/B,cAAc,EAAE,GAAG,EAAE,CAAC,sBAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAEzD,6CAA6C;IAC7C,oBAAoB,EAAE,GAAG,EAAE,CAAC,sBAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAE/D,4BAA4B;IAC5B,WAAW,EAAE,GAAG,EAAE,CAAC,sBAAW,CAAC,IAAI,CAAC,cAAc,CAAC;CACpD,CAAC,CAAC","sources":["webpack://invoice-project/external node-commonjs \"electron\"","webpack://invoice-project/webpack/bootstrap","webpack://invoice-project/./src/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// See the Electron documentation for details on how to use preload scripts:\n// https://www.electronjs.org/docs/latest/tutorial/process-model#preload-scripts\nimport { contextBridge, ipcRenderer } from 'electron';\n\n// You can use Node.js APIs here, but avoid exposing them directly to the renderer\n\n\n// Exposing a safe API to the renderer process\ncontextBridge.exposeInMainWorld('electron', {\n  // Example: Minimize the window\n  minimizeWindow: () => ipcRenderer.send('window:minimize'),\n  \n  // Example: Maximize or unmaximize the window\n  toggleMaximizeWindow: () => ipcRenderer.send('window:maximize'),\n  \n  // Example: Close the window\n  closeWindow: () => ipcRenderer.send('window:close'),\n});\n"],"names":[],"sourceRoot":""}